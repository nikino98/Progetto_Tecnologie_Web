# Generated by Django 3.1.2 on 2020-11-13 13:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=60, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=60, verbose_name='Cognome')),
                ('region', models.CharField(blank=True, max_length=35, null=True, verbose_name='Regione')),
                ('province', models.CharField(blank=True, max_length=30, null=True, verbose_name='Provincia')),
                ('cap', models.CharField(blank=True, max_length=5, null=True, verbose_name='CAP')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Città')),
                ('via', models.CharField(blank=True, max_length=50, null=True, verbose_name='Via')),
                ('house_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Numero civico')),
                ('piano', models.CharField(blank=True, max_length=30, null=True, verbose_name='Piano')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('tel', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Numero di telefono errato!', regex='^\\+?1?\\d{10,10}$')], verbose_name='Telefono')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_restaurateur', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Restaurant user',
                'verbose_name_plural': 'Restaurant users',
            },
        ),
        migrations.CreateModel(
            name='TakeAway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=40)),
                ('drink', models.ManyToManyField(help_text='<em>Tenere premuto Ctrl per selezionare più prodotti</em>', to='products.Drink')),
                ('food', models.ManyToManyField(help_text='<em>Tenere premuto Ctrl per selezionare più prodotti</em>', to='products.Food')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='takeaways', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_people', models.PositiveIntegerField()),
                ('reservation_name', models.CharField(default=None, max_length=50)),
                ('reservation_last_name', models.CharField(default=None, max_length=50)),
                ('date', models.DateTimeField(default=None)),
                ('discount', models.PositiveIntegerField(default=0, help_text="Inserire l'ammontare dello sconto percentuale", validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prenotazioni', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 'Una stella'), (2, 'Due stelle'), (3, 'Tre stelle'), (4, 'Quattro stelle'), (5, 'Cinque stelle')], default=3)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='users.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
